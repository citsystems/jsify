Search.setIndex({"alltitles": {"Assertion module": [[7, null]], "Calls module": [[8, null]], "Checking if Properties Path Exists": [[6, null]], "Contents:": [[1, null], [11, null]], "Creating Camelized Functions": [[0, null]], "Creating Jsified Functions": [[3, null]], "Encoder module": [[9, null]], "Exceptions module": [[10, null]], "Getting Started:": [[2, "getting-started"]], "Indices and tables": [[1, "indices-and-tables"], [11, "indices-and-tables"]], "Introduction": [[2, null]], "Jsified Iteration Over Native Python Objects": [[18, null]], "Jsify module": [[12, null]], "Jsifying and unjsyfing objects": [[4, null]], "Jsify\u2019s manual reference": [[11, null]], "Key Components:": [[2, "key-components"]], "Serializing Object Instances with JSON": [[5, null]], "Stringcase module": [[13, null]], "The Undefined Class": [[15, "the-undefined-class"]], "Undefined Value": [[15, null]], "Undefined module": [[14, null]], "Usage of properties_exist": [[6, "usage-of-properties-exist"]], "Use Cases:": [[2, "use-cases"]], "Using Assertions in Jsify": [[16, null]], "Using Jsified Dictionaries": [[17, null]], "Using Jsified Lists": [[19, null]], "Using Jsified Tuples": [[20, null]], "Using the Result of properties_exist": [[6, "using-the-result-of-properties-exist"]], "Welcome to jsify\u2019s documentation!": [[1, null]], "When to Use the omit_undefined Feature": [[5, "when-to-use-the-omit-undefined-feature"]], "jsify": [[4, "id1"]], "unjsify and deep_unjsify": [[4, "unjsify-and-deep-unjsify"]]}, "docnames": ["camelized_functions", "index", "intro", "jsified_functions", "jsifying_unjsifying", "json_serialization", "properties_exist", "reference/assertion", "reference/calls", "reference/encoder", "reference/exceptions", "reference/index", "reference/jsify", "reference/stringcase", "reference/undefined", "undefined_value", "using_assertions", "using_dictionaries", "using_iterators", "using_lists", "using_tuples"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["camelized_functions.rst", "index.rst", "intro.rst", "jsified_functions.rst", "jsifying_unjsifying.rst", "json_serialization.rst", "properties_exist.rst", "reference/assertion.rst", "reference/calls.rst", "reference/encoder.rst", "reference/exceptions.rst", "reference/index.rst", "reference/jsify.rst", "reference/stringcase.rst", "reference/undefined.rst", "undefined_value.rst", "using_assertions.rst", "using_dictionaries.rst", "using_iterators.rst", "using_lists.rst", "using_tuples.rst"], "indexentries": {"append() (jsify.jsify.List method)": [[12, "jsify.jsify.List.append", false]], "assertion() (jsify.assertion.jsonassert.assertion method)": [[7, "jsify.assertion.JsonAssert.Assertion.assertion", false]], "assertion() (jsify.assertion.jsonassert.isin method)": [[7, "jsify.assertion.JsonAssert.IsIn.assertion", false]], "assertion() (jsify.assertion.jsonassert.notin method)": [[7, "jsify.assertion.JsonAssert.NotIn.assertion", false]], "camelized_function() (in module jsify.calls)": [[8, "jsify.calls.camelized_function", false]], "clear() (jsify.jsify.List method)": [[12, "jsify.jsify.List.clear", false]], "copy() (jsify.jsify.List method)": [[12, "jsify.jsify.List.copy", false]], "copy() (jsify.jsify.Tuple method)": [[12, "jsify.jsify.Tuple.copy", false]], "count() (jsify.jsify.List method)": [[12, "jsify.jsify.List.count", false]], "count() (jsify.jsify.Tuple method)": [[12, "jsify.jsify.Tuple.count", false]], "deep_unjsify() (in module jsify.jsify)": [[12, "jsify.jsify.deep_unjsify", false]], "default() (jsify.encoder.Objectencoder method)": [[9, "id0", false], [9, "jsify.encoder.ObjectEncoder.default", false]], "dump() (in module jsify.encoder)": [[9, "jsify.encoder.dump", false]], "dumps() (in module jsify.encoder)": [[9, "jsify.encoder.dumps", false]], "extend() (jsify.jsify.List method)": [[12, "jsify.jsify.List.extend", false]], "index() (jsify.jsify.List method)": [[12, "jsify.jsify.List.index", false]], "index() (jsify.jsify.Tuple method)": [[12, "jsify.jsify.Tuple.index", false]], "insert() (jsify.jsify.List method)": [[12, "jsify.jsify.List.insert", false]], "iterencode() (jsify.encoder.Objectencoder method)": [[9, "id1", false], [9, "jsify.encoder.ObjectEncoder.iterencode", false]], "jsified_function() (in module jsify.calls)": [[8, "jsify.calls.jsified_function", false]], "jsify() (in module jsify.jsify)": [[12, "jsify.jsify.jsify", false]], "jsify.assertion": [[7, "module-jsify.assertion", false]], "jsify.calls": [[8, "module-jsify.calls", false]], "jsify.encoder": [[9, "module-jsify.encoder", false]], "jsify.exceptions": [[10, "module-jsify.exceptions", false]], "jsify.jsify": [[12, "module-jsify.jsify", false]], "jsify.stringcase": [[13, "module-jsify.stringcase", false]], "jsify.undefined": [[14, "module-jsify.undefined", false]], "json_camel_to_snake() (in module jsify.stringcase)": [[13, "jsify.stringcase.json_camel_to_snake", false]], "jsified_copy() (in module jsify.jsify)": [[12, "jsify.jsify.jsified_copy", false]], "jsified_get() (in module jsify.jsify)": [[12, "jsify.jsify.jsified_get", false]], "jsified_items() (in module jsify.jsify)": [[12, "jsify.jsify.jsified_items", false]], "jsified_keys() (in module jsify.jsify)": [[12, "jsify.jsify.jsified_keys", false]], "jsified_pop() (in module jsify.jsify)": [[12, "jsify.jsify.jsified_pop", false]], "jsified_popitem() (in module jsify.jsify)": [[12, "jsify.jsify.jsified_popitem", false]], "jsified_setdefault() (in module jsify.jsify)": [[12, "jsify.jsify.jsified_setdefault", false]], "jsified_update() (in module jsify.jsify)": [[12, "jsify.jsify.jsified_update", false]], "jsified_values() (in module jsify.jsify)": [[12, "jsify.jsify.jsified_values", false]], "jsonassert (class in jsify.assertion)": [[7, "jsify.assertion.JsonAssert", false]], "jsonassert.assertion (class in jsify.assertion)": [[7, "jsify.assertion.JsonAssert.Assertion", false]], "jsonassert.isin (class in jsify.assertion)": [[7, "jsify.assertion.JsonAssert.IsIn", false]], "jsonassert.notin (class in jsify.assertion)": [[7, "jsify.assertion.JsonAssert.NotIn", false]], "Dict (class in jsify.jsify)": [[12, "jsify.jsify.Dict", false]], "Iterator (class in jsify.jsify)": [[12, "jsify.jsify.Iterator", false]], "List (class in jsify.jsify)": [[12, "jsify.jsify.List", false]], "Object (class in jsify.jsify)": [[12, "jsify.jsify.Object", false]], "Objectencoder (class in jsify.encoder)": [[9, "jsify.encoder.ObjectEncoder", false]], "Tuple (class in jsify.jsify)": [[12, "jsify.jsify.Tuple", false]], "module": [[7, "module-jsify.assertion", false], [8, "module-jsify.calls", false], [9, "module-jsify.encoder", false], [10, "module-jsify.exceptions", false], [12, "module-jsify.jsify", false], [13, "module-jsify.stringcase", false], [14, "module-jsify.undefined", false]], "pop() (jsify.jsify.List method)": [[12, "jsify.jsify.List.pop", false]], "properties_exist() (in module jsify.jsify)": [[12, "jsify.jsify.properties_exist", false]], "propertiesexistresult (class in jsify.jsify)": [[12, "jsify.jsify.PropertiesExistResult", false]], "remove() (jsify.jsify.List method)": [[12, "jsify.jsify.List.remove", false]], "reverse() (jsify.jsify.List method)": [[12, "jsify.jsify.List.reverse", false]], "sort() (jsify.jsify.List method)": [[12, "jsify.jsify.List.sort", false]], "text_camel_to_snake() (in module jsify.stringcase)": [[13, "jsify.stringcase.text_camel_to_snake", false]], "text_snake_to_lower_camel() (in module jsify.stringcase)": [[13, "jsify.stringcase.text_snake_to_lower_camel", false]], "undefinedclass (class in jsify.undefined)": [[14, "jsify.undefined.UndefinedClass", false]], "unjsify() (in module jsify.jsify)": [[12, "jsify.jsify.unjsify", false]], "values_equal() (jsify.assertion.jsonassert static method)": [[7, "jsify.assertion.JsonAssert.values_equal", false]]}, "objects": {"jsify": [[7, 0, 0, "-", "assertion"], [8, 0, 0, "-", "calls"], [9, 0, 0, "-", "encoder"], [10, 0, 0, "-", "exceptions"], [12, 0, 0, "-", "jsify"], [13, 0, 0, "-", "stringcase"], [14, 0, 0, "-", "undefined"]], "jsify.assertion": [[7, 1, 1, "", "JsonAssert"]], "jsify.assertion.JsonAssert": [[7, 1, 1, "", "Assertion"], [7, 1, 1, "", "IsIn"], [7, 1, 1, "", "NotIn"], [7, 2, 1, "", "values_equal"]], "jsify.assertion.JsonAssert.Assertion": [[7, 2, 1, "", "assertion"]], "jsify.assertion.JsonAssert.IsIn": [[7, 2, 1, "", "assertion"]], "jsify.assertion.JsonAssert.NotIn": [[7, 2, 1, "", "assertion"]], "jsify.calls": [[8, 3, 1, "", "camelized_function"], [8, 3, 1, "", "jsified_function"]], "jsify.encoder": [[9, 1, 1, "", "ObjectEncoder"], [9, 3, 1, "", "dump"], [9, 3, 1, "", "dumps"]], "jsify.encoder.ObjectEncoder": [[9, 2, 1, "id0", "default"], [9, 2, 1, "id1", "iterencode"]], "jsify.jsify": [[12, 1, 1, "", "Dict"], [12, 1, 1, "", "Iterator"], [12, 1, 1, "", "List"], [12, 1, 1, "", "Object"], [12, 1, 1, "", "Tuple"], [12, 1, 1, "", "PropertiesExistResult"], [12, 3, 1, "", "deep_unjsify"], [12, 3, 1, "", "jsify"], [12, 3, 1, "", "jsified_copy"], [12, 3, 1, "", "jsified_get"], [12, 3, 1, "", "jsified_items"], [12, 3, 1, "", "jsified_keys"], [12, 3, 1, "", "jsified_pop"], [12, 3, 1, "", "jsified_popitem"], [12, 3, 1, "", "jsified_setdefault"], [12, 3, 1, "", "jsified_update"], [12, 3, 1, "", "jsified_values"], [12, 3, 1, "", "properties_exist"], [12, 3, 1, "", "unjsify"]], "jsify.jsify.List": [[12, 2, 1, "", "append"], [12, 2, 1, "", "clear"], [12, 2, 1, "", "copy"], [12, 2, 1, "", "count"], [12, 2, 1, "", "extend"], [12, 2, 1, "", "index"], [12, 2, 1, "", "insert"], [12, 2, 1, "", "pop"], [12, 2, 1, "", "remove"], [12, 2, 1, "", "reverse"], [12, 2, 1, "", "sort"]], "jsify.jsify.Tuple": [[12, 2, 1, "", "copy"], [12, 2, 1, "", "count"], [12, 2, 1, "", "index"]], "jsify.stringcase": [[13, 3, 1, "", "json_camel_to_snake"], [13, 3, 1, "", "text_camel_to_snake"], [13, 3, 1, "", "text_snake_to_lower_camel"]], "jsify.undefined": [[14, 1, 1, "", "UndefinedClass"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "terms": {"": [2, 3, 4, 5, 6, 8, 9, 12, 14, 15, 17, 19, 20], "0": [4, 19, 20], "1": [12, 19, 20], "10": 3, "12345": 6, "2": [19, 20], "20": 3, "25": [17, 18, 19, 20], "28": 19, "3": 19, "30": [3, 5, 6, 15, 16, 17, 18, 19, 20], "31": 19, "35": [19, 20], "40": 19, "A": [0, 2, 4, 7, 8, 12, 13], "As": 4, "At": [2, 7, 8], "By": [2, 4, 5, 6, 10, 17, 19, 20], "For": [9, 17], "If": [3, 5, 6, 7, 8, 9, 12], "In": [0, 2, 3, 4, 5, 15, 17, 19, 20], "It": [2, 4, 8, 9, 12, 15, 16], "No": 16, "One": 2, "The": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20], "There": 15, "These": [2, 4, 7, 12, 13, 16, 17, 19, 20], "To": [0, 2, 3, 5, 17, 19, 20], "_one_shot": 9, "abil": 17, "about": 15, "absenc": [7, 15, 16], "absent": 7, "accept": 0, "access": [2, 3, 4, 6, 8, 12, 14, 15, 17, 18, 19, 20], "accommod": 9, "accord": 0, "accordingli": [0, 8], "achiev": 5, "across": [2, 15], "act": 12, "ad": [17, 19], "add": 2, "addit": [2, 4, 9, 12], "addition": [3, 8, 9, 12, 13], "address": 6, "adher": 16, "advanc": [19, 20], "advantag": [2, 15, 18, 19], "after": [0, 4, 8, 13], "ag": [5, 6, 15, 16, 17, 18, 19, 20], "against": 7, "alic": [5, 6, 15, 16, 17, 18, 19, 20], "align": 15, "all": [3, 4, 6, 10, 12, 19], "allow": [0, 2, 3, 4, 5, 6, 8, 9, 12, 15, 16, 17, 19, 20], "also": [0, 2, 8, 9, 18, 19], "alter": 12, "alwai": 15, "an": [2, 7, 9, 12, 15, 16, 17, 19, 20], "ani": [3, 4, 5, 9, 10, 12, 15], "anoth": [12, 17], "another_attribut": 15, "another_kei": [0, 4], "another_valu": 4, "anotherkei": 0, "anyerror": [2, 10], "api": [0, 2, 5, 13], "append": [12, 19], "appli": [0, 2, 3, 8, 9], "applic": [2, 15], "approach": [2, 17], "ar": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 17, 18, 19, 20], "arg": [3, 8, 9, 12, 14], "argument": [0, 3, 4, 8, 9, 12, 13], "aris": [6, 17], "around": 12, "assert": [1, 11], "assert_key_abs": 16, "assert_key_pres": 16, "assertionerror": [7, 16], "assign": 15, "associ": [2, 7], "assum": 4, "attribut": [2, 3, 4, 5, 8, 12, 14, 15, 17, 19, 20], "attributeerror": 15, "automat": [0, 2, 3, 5, 8, 13, 18], "avail": [6, 9], "avoid": [6, 15, 17], "back": [2, 3, 4, 5], "base": [3, 5, 7, 8, 9, 10, 12, 14], "baseexcept": 10, "basic": [0, 3, 5, 15, 16], "becaus": 16, "been": 5, "befor": [0, 5, 8], "begin": 2, "behav": [14, 15, 19], "behavior": [2, 4, 5, 8, 9, 12, 14, 15, 17, 18, 19, 20], "being": 12, "benefit": 19, "between": [2, 4, 13, 16], "bidirect": 2, "bigobject": 9, "bob": [17, 18, 19, 20], "bool": [3, 8, 9, 12], "boolean": 15, "both": [0, 6], "bracket": 12, "broad": 10, "broader": [10, 19, 20], "built": [5, 9], "call": [0, 3, 11], "camel": 1, "camelcas": [0, 2, 8, 13], "camelized_funct": [0, 8], "can": [0, 2, 3, 4, 5, 6, 8, 10, 14, 15, 16, 17, 18, 19, 20], "capabl": 10, "case": [0, 12], "catch": 10, "caus": [15, 17], "certain": [0, 7, 8, 13, 17], "chang": 2, "characterist": [15, 17, 20], "charli": [19, 20], "check": [1, 7, 12, 15, 16], "choic": [17, 19, 20], "chunk": 9, "citi": [5, 6, 15, 16, 17, 18, 19, 20], "clash": 17, "class": [2, 7, 9, 12, 14, 16, 18], "clean": 5, "cleaner": 5, "clear": 12, "client": 2, "close": 2, "code": [0, 2, 6, 12, 15], "codebas": [2, 15], "collis": 17, "color": 16, "combin": [0, 15, 19, 20], "common": [2, 17], "commonli": 12, "compar": 15, "comparison": [14, 15, 16], "complex": [2, 4, 6, 16, 17, 19, 20], "complex_data": 16, "compon": 12, "concept": [2, 5, 16], "concis": 5, "condit": 6, "configur": [2, 5], "conflict": 17, "conform": 7, "consequ": 5, "consid": [15, 17], "consider": 15, "consist": [2, 3, 4, 13, 15, 17], "construct": 10, "contain": [6, 10, 15], "content": [7, 16], "context": 15, "control": [3, 5], "conveni": 12, "convent": [0, 2, 13], "convers": [0, 2, 4, 5, 8, 12, 13], "convert": [0, 2, 3, 4, 5, 6, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20], "copi": [2, 12, 17], "copied_dict": 17, "core": [2, 12], "cornerston": 2, "correct": [7, 16], "correctli": [5, 9], "correspond": [0, 3, 4, 12], "cost": 5, "could": 17, "count": 12, "counterpart": [2, 3, 12], "countri": [6, 15], "creat": [1, 2, 10, 12, 17, 19, 20], "criteria": [3, 7], "crucial": 17, "current": [7, 10], "custom": [0, 2, 3, 4, 5, 9, 10], "custom_kei": 0, "data": [0, 2, 3, 4, 5, 6, 8, 12, 13, 15, 16, 17, 18, 19, 20], "dataset": 2, "david": 19, "deal": [6, 15, 17], "decor": [0, 2, 3, 8, 13], "deep": [2, 4, 12, 16], "deep_unjsifi": [2, 3, 8, 12], "deeper": 12, "deepli": [2, 3, 4, 6, 8, 15, 17, 19, 20], "def": [0, 3, 15], "default": [5, 8, 9, 12, 17], "default_valu": 17, "defin": [0, 5, 6, 10, 15], "depend": [4, 8], "design": [2, 6, 7, 9, 12, 14, 15, 16, 17], "desir": [0, 5], "detail": [2, 5, 6, 15, 16, 17, 18, 19, 20], "develop": [2, 4, 8, 10, 13], "dict": [0, 3, 4, 7, 8, 9, 12, 13], "dictionari": [0, 1, 2, 3, 4, 5, 8, 9, 12, 13, 15, 16, 18], "differ": [0, 2], "directli": [6, 15, 17], "disabl": 5, "displai": 12, "disrupt": 2, "distinct": 14, "do": [7, 15], "document": 2, "doe": [2, 12, 16], "done": 9, "dot": 12, "dump": [5, 9, 15], "duplic": 12, "dure": [9, 17, 18], "dynam": [2, 4, 6, 12, 15, 17, 19, 20], "e": [2, 3, 16], "each": [2, 9, 15], "eas": [12, 17], "easi": 2, "easier": [2, 4, 6], "easili": [2, 4], "ecosystem": [19, 20], "effect": [6, 17], "effici": 2, "either": [3, 7], "element": [4, 6, 12, 17, 18, 19, 20], "els": [6, 15], "enabl": [0, 2, 4, 7, 8, 17], "encod": [2, 5, 11], "encount": [6, 15], "enhanc": [2, 4, 12, 19, 20], "ensur": [2, 3, 4, 5, 6, 7, 8, 9, 14, 15, 16, 17], "entir": [3, 5, 16], "environ": [2, 13], "equal": [15, 16], "error": [2, 5, 6, 7, 15, 16], "especi": [6, 16], "essenti": [2, 12, 13], "ev": 19, "evalu": 15, "even": [2, 17, 18], "everi": 16, "exampl": [0, 3, 4, 5, 6, 9, 15, 16, 17, 18, 19, 20], "excel": [19, 20], "except": [2, 11, 15, 16], "exclud": 5, "exist": [1, 2, 12, 15, 16], "expect": [0, 4, 7, 16], "expected_structur": 16, "expected_valu": 16, "experi": [2, 17], "explicitli": [5, 15], "explor": 2, "extend": [2, 9, 12], "extern": 5, "f": [6, 15, 16, 17, 18, 19, 20], "facilit": [2, 4, 8, 12], "fail": 16, "fals": [3, 5, 6, 8, 9, 12, 15], "familiar": 19, "faster": 5, "featur": [2, 4, 9], "field": [5, 9, 15], "file": [5, 9], "final": 5, "find": 12, "first": [0, 3, 12], "flag": 8, "flexibl": [2, 4, 10, 12, 15, 17, 19, 20], "follow": [2, 5, 17], "form": [2, 3, 4, 8], "format": [2, 5, 9, 12, 13, 16, 19, 20], "found": [7, 16, 17], "foundat": 2, "fp": 9, "framework": 16, "free": 5, "frequent": 5, "friction": 2, "friendli": 2, "from": [0, 2, 3, 4, 5, 6, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20], "full": 2, "function": [1, 2, 4, 5, 6, 8, 9, 12, 13, 14, 15, 17, 19, 20], "further": 4, "g": [2, 3], "gain": [19, 20], "gener": [2, 5, 10], "get": [12, 17, 19, 20], "get_data": 3, "get_nested_data": 3, "given": [6, 9], "gracefulli": 14, "green": 16, "handl": [0, 2, 3, 5, 8, 9, 10, 13, 15, 16, 17], "have": [4, 5, 17], "heart": [7, 8], "help": [2, 3, 16], "how": [2, 3, 15], "howev": [0, 15, 17], "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20], "ignor": 15, "immut": 20, "implement": [14, 17], "implic": 15, "import": [0, 3, 4, 5, 6, 9, 15, 16, 17, 18, 19, 20], "includ": [0, 2, 5, 8, 10, 12, 13, 14, 16, 17, 19, 20], "incom": 0, "index": [1, 11, 12, 15, 19, 20], "indic": [15, 19, 20], "individu": 13, "inform": 6, "initi": 0, "inner": 3, "input": [0, 3, 4], "insert": [12, 19], "instal": 2, "instanc": [1, 2, 3, 4, 7, 8, 9, 14, 15, 17, 19, 20], "instead": [3, 12, 15], "int": [7, 12], "integr": [2, 4, 5, 6, 9, 12, 16, 17, 19, 20], "intent": 17, "intention": 15, "interact": [2, 5, 12, 14, 15, 17, 19, 20], "interfac": [0, 2, 3, 4, 5, 12, 17, 19, 20], "intermedi": 15, "intern": 0, "introduc": [2, 14, 15, 16], "introduct": 1, "intuit": [2, 4, 12, 17, 19, 20], "invok": 5, "isin": [7, 16], "item": [12, 15, 17, 19, 20], "items_view": [17, 19, 20], "iter": [1, 9, 12, 17, 19, 20], "iterencod": 9, "its": [2, 4, 8, 12, 14], "itself": 15, "javascript": [2, 14, 15, 16], "jsifi": [0, 2, 5, 6, 7, 8, 9, 13, 14, 15], "jsified_funct": [0, 2, 3, 8], "json": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20], "json_camel_to_snak": 13, "json_copi": [12, 17], "json_dict": 17, "jsified_get": [12, 17], "json_item": [12, 17, 19, 20], "json_kei": [12, 17, 19, 20], "json_list": 19, "json_nested_list": 19, "json_nested_tupl": 20, "json_obj": [4, 5, 6, 15, 16], "json_object": [7, 12], "jsified_pop": 12, "jsified_popitem": 12, "jsified_setdefault": 12, "json_str": [5, 15], "json_tupl": 20, "json_upd": [12, 17], "json_valu": [12, 17], "jsonassert": [7, 16], "Dict": [2, 3, 4, 5, 12, 17, 18], "jsonencod": 9, "jsoniter": [12, 17, 18], "List": [2, 3, 4, 5, 12, 18, 19], "Object": [1, 2, 3, 4, 6, 7, 8, 9, 12, 15, 16, 17, 18, 19, 20], "Objectencod": [2, 5, 9], "jsontupl": [2, 3, 4, 5, 12, 18, 20], "jto": 16, "just": 19, "kei": [0, 3, 4, 5, 7, 8, 12, 13, 15, 16, 17, 19, 20], "key1": [3, 4, 17], "key2": [3, 4, 17], "key3": 17, "keyerror": 15, "keys_view": [17, 19, 20], "keyword": [0, 4, 8, 9, 12], "known": 12, "kwarg": [4, 9, 12], "languag": 16, "larg": 2, "last": 12, "lead": [5, 17], "lean": 5, "leav": 5, "left": 15, "level": 15, "level1": 4, "level2": 4, "level2_list": 4, "level3": 4, "leverag": [2, 9], "librari": [0, 2, 3, 4, 5, 6, 10, 15, 16, 17, 18, 19, 20], "like": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20], "linkag": 2, "list": [1, 2, 3, 4, 5, 7, 8, 12, 16, 18], "live": 15, "logic": 9, "lower": 5, "lowercamelcas": 13, "made": 2, "mai": [8, 10, 15], "maintain": [2, 5, 6, 12, 17], "make": [2, 4, 6, 14, 15, 17, 19, 20], "manag": 2, "manipul": [2, 4, 12, 15, 17, 19, 20], "manner": [4, 17], "manual": 1, "map": 0, "match": [0, 7, 16], "mean": [2, 3, 15, 17, 18, 19], "meaning": 5, "mechan": [10, 15], "memori": 2, "messag": 7, "method": [2, 7, 9, 12, 14, 16, 17, 19, 20], "metropoli": [16, 17, 18, 19, 20], "might": [6, 15, 17], "mimic": [14, 15], "mimick": 2, "minim": [2, 5], "misinterpret": 5, "miss": 15, "model": 14, "modifi": [2, 16, 17, 19], "modul": [1, 2, 3, 5, 11], "more": [2, 4, 5, 6, 10, 12, 15, 17, 19, 20], "multipl": 15, "must": 9, "mysocket": 9, "name": [0, 2, 5, 6, 13, 15, 16, 17, 18, 19, 20], "nativ": [1, 2, 3, 4, 5, 19], "native_list": 18, "navig": [12, 15], "need": [0, 2, 3, 4, 5, 7, 10, 14, 15, 16, 17], "nest": [2, 3, 4, 6, 7, 12, 15, 16, 17, 18, 19, 20], "nested_data": 19, "nested_dict": 17, "nested_kei": 4, "nested_tupl": 20, "nested_valu": 4, "nestedkei": 4, "nestedvalu": 4, "new": [12, 17, 19], "non": [6, 15], "non_existent_properti": 15, "none": [0, 8, 9, 12, 13, 14, 15], "nonexist": 16, "normal": 15, "notat": 12, "notin": [7, 16], "now": [0, 4], "null": [5, 15], "number": 12, "o": [4, 9, 12], "obj": [4, 12], "object": [0, 1, 2, 3, 5, 6, 7, 9, 12, 14, 15, 16, 17], "occur": [10, 15], "occurr": 12, "offer": [2, 3, 7, 8, 12, 19], "often": 5, "old": [15, 19, 20], "omit": [5, 9, 15], "omit_undefin": 9, "one": [14, 15], "onli": [2, 5, 14, 15, 18], "oper": [14, 15, 17, 19], "option": [0, 3, 6, 8, 9, 12, 13, 15], "optional_field": 15, "origin": [2, 3, 4, 5, 8, 9, 12], "original_data": 4, "other": [0, 4, 5, 8, 15, 17, 18], "otherwis": [4, 6, 12, 17], "out": 5, "outer": 3, "output": [0, 3, 4, 5, 6, 9, 15, 16, 17, 18, 19, 20], "over": [1, 12, 17, 19, 20], "overrid": 9, "page": [1, 11], "pair": [12, 17, 19, 20], "paramet": [0, 3, 4, 5, 7, 8, 9, 12, 13], "pars": 15, "part": 16, "partial": 6, "particularli": [0, 2, 3, 4, 5, 6, 7, 8, 10, 13, 15, 16, 17], "pass": [0, 8, 9, 13, 16], "path": [1, 7, 12], "pattern": [6, 10], "payload": 5, "perform": [2, 4, 7, 12, 15, 16, 19], "place": 12, "placehold": [14, 15], "pop": [12, 19], "posit": [8, 9], "potenti": [2, 17], "power": [2, 16, 17, 18, 19, 20], "predict": [3, 17], "prefer": [0, 16], "presenc": [6, 7, 15, 16], "present": [7, 12, 15], "preserv": [5, 12, 17, 19, 20], "preval": 2, "prevent": 15, "primari": 3, "print": [0, 3, 4, 5, 6, 15, 16, 17, 18, 19, 20], "process": [0, 2, 3, 4, 5, 8, 9, 15], "process_data": [0, 3], "process_user_info": 15, "project": 2, "properli": 4, "properti": [1, 12, 15, 18], "properties_exist": 12, "propertiesexistresult": 12, "provid": [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17], "purpos": [2, 10], "python": [0, 1, 2, 3, 4, 5, 8, 9, 12, 14, 15, 16, 17, 19, 20], "rais": [7, 12, 15, 16], "rang": [2, 7], "rather": [2, 17], "readabl": 12, "receiv": [3, 5], "recurs": [3, 4], "red": 16, "reduc": [2, 5], "refer": [1, 2], "reflect": 2, "regular": [17, 19], "relev": 5, "reliabl": [6, 15], "remark": 17, "remov": [12, 19], "repeat": 15, "replac": [0, 5, 8, 13], "repres": [15, 19, 20], "represent": [4, 5, 9, 12, 14], "requir": [5, 12, 13], "respect": [2, 12, 17], "result": [3, 4, 5, 8, 15, 17], "result_deep_origin": [3, 8], "result_origin": [3, 8], "retain": [17, 19], "retriev": [17, 19, 20], "return": [2, 3, 4, 6, 8, 9, 12, 13, 15, 17, 18], "revers": 12, "revert": 2, "review": 2, "risk": 15, "robust": [2, 6, 15], "root": 16, "rtype": 12, "rule": 0, "runtim": 15, "safe": [6, 15, 17], "same": [17, 19, 20], "sampl": 5, "save": 5, "scenario": [0, 2, 4, 5, 6, 7, 14, 15, 16], "seamless": [2, 5, 9, 17], "seamlessli": [3, 19, 20], "search": [1, 11], "second": 3, "select": 2, "send": 5, "sent": 2, "separ": 17, "sequenc": [6, 12], "seri": [6, 12], "serial": [1, 2, 4, 9, 15], "serv": 10, "server": 2, "set": [3, 5, 12, 15], "sever": [14, 17], "shallow": [12, 17], "should": [4, 5, 12], "shouldn": 16, "side": 2, "signatur": [0, 3], "signific": 5, "similar": [14, 15, 17], "similarli": [15, 19], "simpl": 6, "simpli": [0, 2, 3, 15], "simplifi": [2, 8, 12], "sinc": 2, "singl": 10, "singleton": [14, 15], "situat": 10, "size": 5, "smooth": 4, "snake_cas": [0, 2, 8, 13], "snake_case_kei": 0, "snakecasekei": 0, "some": [15, 17], "some_attribut": 15, "some_kei": 15, "some_method": 15, "some_specific_kei": 0, "somespecifickei": 0, "sort": 12, "sourc": [7, 8, 9, 12, 13, 14], "special": [2, 14, 15, 17], "specif": [0, 2, 3, 5, 7, 9, 12, 16, 17, 19], "specifi": [0, 8, 12, 13, 17], "squar": 12, "standalon": 17, "standard": [2, 4, 5, 9, 12, 15, 17, 18, 19, 20], "start": 18, "statement": 6, "static": 7, "still": [0, 17, 19, 20], "storag": 5, "store": 5, "str": [7, 9, 12, 13], "stream": 9, "streamlin": 2, "string": [2, 5, 9, 12, 13, 14, 19, 20], "stringcas": [2, 11], "strong": 2, "structur": [2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 16, 17, 18, 19, 20], "style": [2, 3, 4, 8, 12, 15, 17, 18, 19, 20], "subclass": 2, "suit": [2, 7], "support": [2, 12, 17, 19, 20], "switch": 4, "system": [0, 5], "t": 16, "tailor": [2, 10], "take": [18, 19], "target": 6, "task": [2, 13], "test": [7, 16], "text": 13, "text_camel_to_snak": 13, "text_snake_to_lower_camel": 13, "than": [2, 17], "thei": [0, 8, 17], "them": [0, 2, 4, 8, 17], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20], "those": 7, "through": [2, 5, 15, 16], "throughout": [2, 15], "time": 2, "tool": [2, 6, 7, 13, 18], "toolkit": 2, "tradition": 17, "transform": [2, 12, 13], "transmiss": 5, "transmit": 5, "treat": 15, "true": [3, 6, 8, 9, 12, 15], "try": [15, 16], "tupl": [1, 2, 3, 4, 5, 8, 9, 10, 12, 18], "type": [2, 4, 8, 9, 10, 12, 13, 18], "typic": 15, "unchang": 4, "undef": 5, "undefin": [1, 5, 9, 11], "undefinedclass": [14, 15], "underli": [5, 12], "understand": 2, "unexpect": [15, 17], "unintend": 5, "unjsif": 4, "unjsifi": [2, 3, 6, 8, 12], "unjsyf": 1, "unknown": 15, "unnecessari": 5, "updat": [12, 17, 19], "us": [0, 1, 3, 4, 7, 8, 9, 10, 12, 14, 15, 18], "usag": [0, 2, 3, 4, 15, 17, 19, 20], "user": [6, 15, 16], "user1": 17, "user2": 17, "user_kei": 17, "util": [2, 3, 4, 6, 12, 13], "valid": [6, 7, 16], "valu": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 14, 16, 17, 18, 19, 20], "valuabl": [2, 6], "value1": [0, 3, 4, 17], "value2": [0, 3, 17], "value3": 17, "valueerror": 12, "values_equ": [7, 16], "values_view": 17, "variabl": 15, "variou": 16, "verifi": [4, 6, 7, 16], "versa": [2, 13], "version": [3, 17, 19, 20], "via": 15, "vice": [2, 13], "view": [12, 17, 19, 20], "wai": [2, 6, 15, 17, 19, 20], "want": [4, 9, 15], "warsaw": [17, 18], "we": 17, "web": 2, "well": [2, 3, 7, 13, 16], "were": 17, "when": [0, 2, 3, 4, 6, 12, 15, 16, 17, 18], "where": [0, 2, 4, 5, 6, 7, 10, 13, 14, 15, 16, 17, 19, 20], "whether": [2, 5, 15, 16], "which": [0, 2, 4, 7, 8, 9, 10, 12, 14, 15, 16, 17, 19, 20], "while": [0, 2, 12, 17, 19, 20], "why": 17, "within": [2, 3, 4, 6, 7, 8, 10, 16], "without": [2, 6, 12, 15], "wonderland": [5, 6, 15, 16, 17, 19, 20], "work": [0, 2, 4, 6, 7, 8, 12, 13, 15, 16, 17, 19, 20], "workflow": 9, "worri": 15, "would": [12, 15, 17, 19], "wrap": [2, 9, 12], "wrapper": 12, "write": 9, "written": 9, "year": [15, 19, 20], "yield": 9, "you": [0, 2, 3, 4, 5, 6, 7, 9, 15, 16, 17, 18, 19, 20], "your": [0, 2, 3, 5, 6, 15, 16], "zipcod": 6}, "titles": ["Creating Camelized Functions", "Welcome to jsify\u2019s documentation!", "Introduction", "Creating Jsified Functions", "Jsifying and unjsyfing objects", "Serializing <cite>Object</cite> Instances with JSON", "Checking if Properties Path Exists", "Assertion module", "Calls module", "Encoder module", "Exceptions module", "Jsify\u2019s manual reference", "Jsify module", "Stringcase module", "Undefined module", "<cite>Undefined</cite> Value", "Using Assertions in Jsify", "Using Jsified Dictionaries", "Jsified Iteration Over Native Python Objects", "Using Jsified Lists", "Using Jsified Tuples"], "titleterms": {"": [1, 11], "The": 15, "assert": [7, 16], "call": 8, "camel": 0, "case": 2, "check": 6, "class": 15, "compon": 2, "content": [1, 11], "creat": [0, 3], "deep_unjsifi": 4, "dictionari": 17, "document": 1, "encod": 9, "except": 10, "exist": 6, "featur": 5, "function": [0, 3], "get": 2, "indic": [1, 11], "instanc": 5, "introduct": 2, "iter": 18, "jsifi": [1, 3, 4, 11, 12, 16, 17, 18, 19, 20], "json": 5, "Object": 5, "kei": 2, "list": 19, "manual": 11, "modul": [7, 8, 9, 10, 12, 13, 14], "nativ": 18, "object": [4, 18], "omit_undefin": 5, "over": 18, "path": 6, "properti": 6, "properties_exist": 6, "python": 18, "refer": 11, "result": 6, "serial": 5, "start": 2, "stringcas": 13, "tabl": [1, 11], "tupl": 20, "undefin": [14, 15], "unjsifi": 4, "unjsyf": 4, "us": [2, 5, 6, 16, 17, 19, 20], "usag": 6, "valu": 15, "welcom": 1, "when": 5}})